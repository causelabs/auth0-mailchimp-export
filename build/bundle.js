module.exports=function(e){function t(o){if(r[o])return r[o].exports;var n=r[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){var o=r(19);e.exports=o.fromExpress(r(8))},function(e,t){e.exports=require("q")},function(e,t){"use strict";var r=function(e,t){var r=e.MAILCHIMP_LIST_NAME;return function(e,o){t.lists_list({filters:{list_name:r}},function(t,r){if(t)return console.error(t),o(t);var n=r.data[0],i=n.id,s=n.name;return console.log("AME: MailChimp list ID/name: "+i+" / "+s),o(null,{mailChimpList:n,users:e})})}};e.exports=r},function(e,t){e.exports=require("async")},function(e,t){e.exports=require("mailchimp")},function(e,t){e.exports=require("moment")},function(e,t){e.exports=require("ramda")},function(e,t){e.exports=require("request")},function(e,t,r){function o(e,t){var r=e.webtaskContext,o=["AUTH0_DOMAIN","AUTH0_CLIENT_ID","AUTH0_CLIENT_SECRET","MAILCHIMP_API_KEY","MAILCHIMP_LIST_NAME"],s=o.filter(function(e){return!r.data[e]});if(s.length)return t.status(400).send({message:"Missing settings: "+s.join(", ")});var a={TENANT_DOMAIN:e.webtaskContext.data.AUTH0_DOMAIN,USER_SEARCH_MGMT_TOKEN:e.access_token,MAILCHIMP_API_KEY:r.data.MAILCHIMP_API_KEY,MAILCHIMP_LIST_NAME:r.data.MAILCHIMP_LIST_NAME,UPDATE_DAYS:r.data.UPDATE_DAYS};console.log("AME: Begin synchronization"),n(a,function(e){return e?t.sendStatus(500).send("Error - please see logs for details"):(console.log("AME: Requesting removal of protected email addresses"),void i(a,function(r){return e?t.sendStatus(500).send("Error - please see logs for details"):(console.log("AME: Synchronization complete"),t.status(200).send("All done!"))}))})}function n(e,t){u(e).then(function(){return t()},function(e){return t(e)})}function i(e,t){d(e).then(function(){return t()},function(e){return t(e)})}var s=r(16),a=s(),c=r(17),l=r(18),u=r(14),d=r(13),h=r(9),p=c({load:function(e,t,r,o,n){l.post(e).send({audience:t,grant_type:"client_credentials",client_id:r,client_secret:o}).type("application/json").end(function(e,t){e||!t.ok?n(null,e):n(t.body.access_token)})},hash:function(e){return e},max:100,maxAge:36e5});a.use(function(e,t,r){if("/meta"===e.path)return r();var o="https://"+e.webtaskContext.data.AUTH0_DOMAIN+"/oauth/token",n="https://"+e.webtaskContext.data.AUTH0_DOMAIN+"/api/v2/",i=e.webtaskContext.data.AUTH0_CLIENT_ID,s=e.webtaskContext.data.AUTH0_CLIENT_SECRET;p(o,n,i,s,function(t,o){return o?(console.error("Error getting access_token",o),r(o)):(e.access_token=t,void r())})}),a.get("/",o),a.post("/",o),a.get("/meta",function(e,t){t.status(200).send(h)}),e.exports=a},function(e,t){e.exports={codeUrl:"https://github.com/causelabs/auth0-mailchimp-export",title:"Auth0 MailChimp Export",name:"auth0-mailchimp-export",version:"1.3.0",author:"Auth0 / CauseLabs",description:"Allows Auth0 accounts to synchronize their Auth0 user base (e.g., those that have an email address and are verified) with a MailChimp list",type:"cron",repository:"https://github.com/causelabs/auth0-mailchimp-export",keywords:["auth0","mailchimp","user profile"],schedule:"0 */5 * * * *",secrets:{AUTH0_DOMAIN:{description:"The Auth0 domain to authorize.",required:!0},AUTH0_CLIENT_ID:{description:"The Auth0 client ID to authorize.",required:!0},AUTH0_CLIENT_SECRET:{description:"The Auth0 client secret associated with the client ID above.",required:!0},MAILCHIMP_API_KEY:{description:"The MailChimp API key associated with your MailChimp user account, e.g. f1b0602xy124d85d8444a5d4e5eed-us14",required:!0},MAILCHIMP_LIST_NAME:{description:"The name of the MailChimp list to which you wish to export Auth0 user profiles, e.g. Auth0-DBConn1",required:!0},UPDATE_DAYS:{description:"The number of days back from job instantiation date to retrieve users (default: 1). Use * for all records (but note that this will timeout if executed on Auth0; see README.md for more information).",required:!0,default:1}}}},function(e,t,r){"use strict";var o=r(7),n=r(6),i=r(1),s=r(5),a=function(e,t,r,c){var l=e.TENANT_DOMAIN,u=e.USER_SEARCH_MGMT_TOKEN,d="*"!==e.UPDATE_DAYS?s().subtract(e.UPDATE_DAYS,"days").format("YYYY-MM-DD"):"*",h=i.defer(),p="email_verified:true AND _exists_:email AND email_verified:true AND _exists_:email AND -user_metadata.exclude_from_mailchimp_synchronization:[* TO *] AND updated_at:["+d+" TO *]",m={q:p,search_engine:"v2",per_page:r,page:c,sort:"updated_at:-1",fields:"email,given_name,family_name",include_fields:"true"},A={method:"GET",url:"https://"+l+"/api/v2/users",qs:m,headers:{"cache-control":"no-cache",authorization:"Bearer "+u}};return o(A,function(o,i,s){if(o)return h.reject(new Error(o));var l=JSON.parse(s);return l.length>0?(t=n.concat(t,l),console.log('AME: Executing query: "'+p+'"; retrieved '+t.length+" users"),h.resolve(a(e,t,r,c+1))):(console.log("AME: User retrieval complete"),h.resolve(t))}),h.promise},c=function(e){return function(t){console.log("AME: Attempting to retrieve Auth0 users"),a(e,[],100,0).then(function(e){var r=e.length;return console.log("AME: Total number of Auth0 users: "+r),t(null,e)},function(e){console.error("ERROR: "+e),t(e)})}};e.exports=c},function(e,t,r){"use strict";var o=r(7),n=r(6),i=r(1),s=r(5),a=function(e,t,r,c){var l=e.TENANT_DOMAIN,u=e.USER_SEARCH_MGMT_TOKEN,d="*"!==e.UPDATE_DAYS?s().subtract(e.UPDATE_DAYS,"days").format("YYYY-MM-DD"):"*",h=i.defer(),p="email_verified:true AND _exists_:email AND email_verified:true AND _exists_:email AND user_metadata.exclude_from_mailchimp_synchronization:[* TO *] AND updated_at:["+d+" TO *]",m={q:p,search_engine:"v2",per_page:r,page:c,sort:"updated_at:-1",fields:"email",include_fields:"true"},A={method:"GET",url:"https://"+l+"/api/v2/users",qs:m,headers:{"cache-control":"no-cache",authorization:"Bearer "+u}};return o(A,function(o,i,s){if(o)return h.reject(new Error(o));var l=JSON.parse(s);return l.length>0?(t=n.concat(t,l),console.log('AME: Executing query: "'+p+'"; retrieved '+t.length+" users"),h.resolve(a(e,t,r,c+1))):(console.log("AME: User retrieval complete"),h.resolve(t))}),h.promise},c=function(e){return function(t){console.log("AME: Attempting to retrieve Auth0 users"),a(e,[],100,0).then(function(e){var r=e.length;return console.log("AME: Total number of Auth0 users: "+r),t(null,e)},function(e){console.error("ERROR: "+e),t(e)})}};e.exports=c},function(e,t){"use strict";var r=function(e,t){return function(e,r){var o=e.mailChimpList.id,n=e.users;console.log("AME: "+n.length+" users retrieved from Auth0");var i=n.filter(function(e){return!e.email.includes("+")}).map(function(e){return{email:{email:e.email},email_type:"text",merge_vars:{FNAME:e.given_name||"",LNAME:e.family_name||""}}});console.log("AME: "+i.length+" valid email address users to synchronize with Mailchimp");var s={id:o,batch:[],double_optin:!1,update_existing:!0,replace_interests:!0},a=2e3,c=i.length,l=0,u=1,d=parseInt(i.length/a,10)+1;console.log("AME: Beginning Mailchimp synchronization ("+d+" total calls required)");var h=function(o){s.batch=i.splice(o,a),console.log("AME: Synchronizing with Mailchimp, please wait ("+u+"/"+d+") ..."),t.lists_batch_subscribe(s,function(t,o){return t?(console.error("AME: "+t),r(t)):(l+=a,console.log("AME: Mailchimp batch list update completed successfully; processed "+(l<c?l:c)+"/"+c+" records"),o.error_count>0&&console.log("AME: "+o.error_count+" error(s) encountered from Mailchimp:"+JSON.stringify(o.errors)),u++,l<c?void h(l):r(null,e))})};h(0)}};e.exports=r},function(e,t,r){"use strict";var o=r(4).MailChimpAPI,n=r(3),i=r(1),s=function(e){var t=e.MAILCHIMP_API_KEY;try{console.log("AME: Attempting to connect to MailChimp API");var s=new o(t,{version:"2.0"})}catch(e){return console.log(e.message)}console.log("AME: Mailchimp API created");var a=r(2)(e,s),c=r(11)(e),l=r(15)(e,s),u=i.defer();return console.log("AME: Preparing user retrieval and synchronization"),n.waterfall([c,a,l],function(e){return e?(console.error(e),u.reject(new Error(e))):u.resolve()}),u.promise};e.exports=s},function(e,t,r){"use strict";var o=r(4).MailChimpAPI,n=r(3),i=r(1),s=function(e){var t=e.MAILCHIMP_API_KEY;try{console.log("AME: Attempting to connect to MailChimp API");var s=new o(t,{version:"2.0"})}catch(e){return console.log(e.message)}console.log("AME: Mailchimp API created");var a=r(2)(e,s),c=r(10)(e),l=r(12)(e,s),u=i.defer();return console.log("AME: Preparing user retrieval and synchronization"),n.waterfall([c,a,l],function(e){return e?(console.error(e),u.reject(new Error(e))):u.resolve()}),u.promise};e.exports=s},function(e,t){"use strict";var r=function(e,t){return function(e,r){var o=e.mailChimpList.id,n=e.users;console.log("AME: "+n.length+" users retrieved from Auth0 for removal");var i=n.filter(function(e){return!e.email.includes("+")}).map(function(e){return{email:e.email}});console.log("AME: "+i.length+" valid email address users to remove from Mailchimp");var s={id:o,batch:[],delete_member:!1,send_goodbye:!1,send_notify:!1},a=2e3,c=i.length,l=0,u=1,d=parseInt(i.length/a,10)+1;console.log("AME: Beginning Mailchimp synchronization ("+d+" total calls required)");var h=function(o){s.batch=i.splice(o,a),console.log("AME: Synchronizing with Mailchimp, please wait ("+u+"/"+d+") ..."),t.lists_batch_unsubscribe(s,function(t,o){return t?(console.error("AME: "+t),r(t)):(l+=a,console.log("AME: Mailchimp batch list removal completed successfully; processed "+(l<c?l:c)+"/"+c+" records"),o.error_count>0&&console.log("AME: "+o.error_count+" error(s) encountered from Mailchimp:"+JSON.stringify(o.errors)),u++,l<c?void h(l):r(null,e))})};h(0)}};e.exports=r},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("lru-memoizer")},function(e,t){e.exports=require("superagent")},function(e,t){e.exports=require("webtask-tools")}]);